Conditions requises :
	- python 2.4 ou supérieur
	- le logiciel wapiti doit être installé

/!\ Attention /!\
Les scripts ne furent testés que sur Debian/Ubuntu et mac. Aucune garantie sur les autres systèmes d'exploitation.



I) cem_tagger.py

	Aide :
		python cem_tagger.py -h

	Commande pour étiqueter un texte sans utiliser le lefff :
		python cem_tagger.py in -m model -o out/

	Commande pour étiqueter un texte en utilisant le lefff :
		python cem_tagger.py in tag_list -m model -o out/ -l lefff_pickled --tag-list

	Fichiers recquis :
		- in : le fichier en entrée.
		- lefff_pickled : ce fichier contient les données du lefff qui furent utilisées pour réaliser les modèles.
		- tag_list : contient la liste des étiquettes rencontrées dans le French Tree Bank.
		- model : le fichier model qui sera utilisé par wapiti pour étiqueter les mots.
		- out : le dossier de sortie.

	Autres options :
		- (--segmentation, -s) : si le fichier en entrée est du texte brut et doit être auparavant segmenté de façon à être utilisable par les scripts et wapiti.
		- (--clean, -c) : nettoie le dossier de sortie des fichiers générés par le script, à l'exception du résultat.


II) Fichier d'entrée.

	Le fichier d'entrée peut être écrit comme du texte normal, le segmenteur fonctionne bien, cependant il n'est pas parfait et peut donner de mauvais résultats, notamment si l'on met des ponctuations fortes juste avant une paranthèse fermante (pas d'autre cas d'échec recensé pour l'instant).


III) Sortie.

	Dans le dossier de sortie donné en paramètre seront générés plusieurs fichiers. Tout d'abord le fichier segmenté (si donné en option) qui aura le nom du fichier en entrée suivi de "_segment". Le fichier avec les informations de "base" (si le mot commence par une majuscule, s'il est un chiffre ou une ponctuation et ses trois dernières lettres) qui aura le nom du fichier en entrée suivi de "_informed". Le fichier auquel on a ajouté les informations extraites du lefff (si donné en option) et qui aura le nom du fichier en entrée suivi de "_lefff". "wapiti_out" qui est la sortie de wapiti (donc avec les colonnes d'information). Puis le fichier de sortie en lui-même qui ne contient que les mots et leurs étiquettes correpondantes, qui aura le nom du fichier en entrée suivi de "_out".

	Les fichiers déjà éxistants seront écrasés sans demande à l'utilisateur et sans notification.



IV) Remarques.

	Le segmenteur suppose que l'entrée donnée est correcte et ne vérifie donc pas que chaque mot soit segmenté de la même façon : par exemple, il est tout-à-fait possible de donner les mots "c'est" et "c'_est" sans que cela ne créé d'erreur, wapiti fera l'étiquetage malgré tout.



V) Liste des étiquettes.

	- ADJ, ADJWH
	- ADV, ADVWH
	- CC
	- CLO, CLR, CLS
	- CS
	- DET, DETWH
	- ET
	- I
	- NC, NPP
	- P, P+D, P+PRO
	- PONCT
	- PREF
	- PRO, PROREL, PROWH
	- V, VIMP, VINF, VPP, VPR, VS

	WH fait référence auw "questions wh" de l'anglais. Les éléments qui appartiennent aux classes se terminant par WH ont pour but de répondre aux questions telles que "pourquoi?", "comment?", "où?", etc...

	P+D sont les prépositions telles que "de", "au~", autrement dit les préposition+déterminant.

	P+PRO sont les prépositions comme "duquel", donc les préposition+pronom.
